{"version":3,"sources":["ScanService.js","utils/colors.js","utils/Button.js","utils/IconButton.js","screens/ScannerScreen.js","screens/HomeScreen.js","App.js","assets/theme.jpg"],"names":["API_BARCODE","TOTAL_BARCODES","fetchBarcodes","length","res","axios","get","key","data","obj","id","barcode","isVegan","lastUpdated","lastUpdate","name","productName","extra","type","push","Colors","ButtonCmp","props","onPress","title","Pressable","style","styles","button","Text","text","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","borderWidth","elevation","fontSize","fontWeight","color","IconButton","Ionicons","size","ScannerScreen","navigation","useState","hasPremmission","setHasPremission","scanned","setScanned","hideCamera","setHideCamera","showStartBtn","setShowStartBtn","setShowModal","askForCameraPermission","status","BarCodeScanner","requestPermissionsAsync","useEffect","getBarcodes","goBack","navigate","useLayoutEffect","setOptions","headerRight","headerLeft","fontFamily","View","container","SafeAreaView","barcodebox","onBarCodeScanned","undefined","barcodeToFind","find","item","checkVegan","console","log","Alert","alert","height","width","flex","overflow","HomeScreen","ImageBackground","source","require","resizeMode","imageStyle","imageBg","main","txt","display","flexDirection","opacity","radius","buttonStyle","borderColor","titleStyle","raised","containerStyle","marginHorizontal","marginVertical","href","goWeb","padding","textAlign","App","Stack","createNativeStackNavigator","useFonts","AmaticSC_700Bold","StatusBar","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","Screen","component","options","module","exports"],"mappings":"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","file":"static/js/app.02a52ac8.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_BARCODE = \"https://who-sapp-default-rtdb.firebaseio.com/barcode.json\"\r\nconst TOTAL_BARCODES = []\r\n\r\nexport function storeItems(item) {\r\n  if (API_BARCODE.includes(item)) return\r\n  return axios.post(API_BARCODE, item)\r\n}\r\n\r\nexport async function fetchBarcodes() {\r\n  if (!TOTAL_BARCODES || TOTAL_BARCODES.length === 0) {\r\n    const res = await axios.get(API_BARCODE)\r\n    for (let key in res.data) {\r\n      const obj = {\r\n        id: key,\r\n        barcode: res.data[key].barcode,\r\n        isVegan: true,\r\n        lastUpdated: res.data[key].lastUpdate,\r\n        name: res.data[key].productName,\r\n        extra: res.data[key].type,\r\n      }\r\n      TOTAL_BARCODES.push(obj)\r\n    }\r\n\r\n    return TOTAL_BARCODES\r\n  }\r\n  return TOTAL_BARCODES\r\n}\r\n\r\nexport function checkVegan(barcode) {\r\n  const barcodeToFind = TOTAL_BARCODES.find((item) => item.barcode === barcode)\r\n  if (!barcodeToFind || barcodeToFind.length === 0) return null\r\n  return barcodeToFind\r\n}\r\n\r\nasync function postItem(productName, barcode, type) {\r\n  const itemToPost = {\r\n    barcode,\r\n    productName,\r\n    type,\r\n    lastUpdate: \"11.22\",\r\n    canBeVegan: true,\r\n  }\r\n\r\n  const total = await fetchBarcodes()\r\n\r\n  const isExist = total.filter((item) => item.barcode === itemToPost.barcode)\r\n  if (isExist) return\r\n  else {\r\n    const res = await axios.post(API_BARCODE, isExist)\r\n    console.log(res.data)\r\n  }\r\n}\r\n","export const Colors = {\r\n  bgColor: \"#F7CE68\",\r\n  primary50: \"#e4d9fd\",\r\n  primary100: \"#c6affc\",\r\n  primary200: \"#a281f0\",\r\n  primary400: \"#5721d4\",\r\n  primary500: \"#3e04c3\",\r\n  primary700: \"#2d0689\",\r\n  primary800: \"#200364\",\r\n  accent500: \"#f7bc0c\",\r\n  error50: \"#fcc4e4\",\r\n  error500: \"#9b095c\",\r\n  gray500: \"#39324a\",\r\n  gray700: \"#221c30\",\r\n  redTavenli: \"#8a2b06\",\r\n}\r\n","import React from \"react\"\r\nimport {Text, View, StyleSheet, Pressable} from \"react-native\"\r\nimport {Colors} from \"./colors\"\r\n\r\nexport function ButtonCmp(props) {\r\n  const {onPress, title = \"Save\"} = props\r\n  return (\r\n    <Pressable style={styles.button} onPress={onPress}>\r\n      <Text style={styles.text}>{title}</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 20,\r\n    backgroundColor: Colors.gray500,\r\n    borderWidth: 2,\r\n    elevation: 7,\r\n    // backgroundColor: \"black\",\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    // lineHeight: 21,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n})\r\n","import {Pressable} from \"react-native\"\r\nimport {AntDesign} from \"@expo/vector-icons\"\r\nimport {Ionicons} from \"@expo/vector-icons\"\r\n\r\nexport function IconButton({name, color, onPress}) {\r\n  return (\r\n    <Pressable onPress={onPress}>\r\n      <Ionicons name={name} size={24} color={color} />\r\n    </Pressable>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport {Alert, Modal, StyleSheet, Text, View, SafeAreaView} from \"react-native\"\r\nimport {BarCodeScanner} from \"expo-barcode-scanner\"\r\nimport {checkVegan, fetchBarcodes} from \"../ScanService\"\r\nimport {Colors} from \"../utils/colors\"\r\nimport {useLayoutEffect} from \"react\"\r\nimport {ButtonCmp} from \"../utils/Button\"\r\nimport {IconButton} from \"../utils/IconButton\"\r\n\r\nexport function ScannerScreen({navigation}) {\r\n  const [hasPremmission, setHasPremission] = useState(null)\r\n  const [scanned, setScanned] = useState(false)\r\n\r\n  const [hideCamera, setHideCamera] = useState(true)\r\n  const [showStartBtn, setShowStartBtn] = useState(true)\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const askForCameraPermission = () => {\r\n    ;(async () => {\r\n      const {status} = await BarCodeScanner.requestPermissionsAsync()\r\n      setHasPremission(status === \"granted\")\r\n    })()\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getBarcodes() {\r\n      await fetchBarcodes()\r\n    }\r\n\r\n    askForCameraPermission()\r\n    getBarcodes()\r\n  }, [])\r\n\r\n  function startScanning() {\r\n    setHideCamera(false)\r\n    setShowStartBtn(false)\r\n  }\r\n\r\n  const handleBarcode = ({type, data}) => {\r\n    setScanned(true)\r\n    setHideCamera(true)\r\n    const isVegan = checkVegan(data)\r\n    console.log(isVegan)\r\n    setShowModal(true)\r\n    if (isVegan) Alert.alert(\"המוצר טבעוני\")\r\n    else Alert.alert(\"המוצר לא נמצא במאגרינו\")\r\n    console.log(`Type:${type} with data:${data}`)\r\n  }\r\n\r\n  function finishScan() {\r\n    setScanned(false)\r\n    setHideCamera(false)\r\n  }\r\n\r\n  function goBack() {\r\n    navigation.navigate(\"home\")\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => {\r\n        return <IconButton name=\"arrow-back\" color=\"white\" onPress={goBack} />\r\n      },\r\n      headerLeft: () => {\r\n        return (\r\n          <Text\r\n            style={{\r\n              fontFamily: \"AmaticSC_700Bold\",\r\n              fontSize: 30,\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            טבען-לי\r\n          </Text>\r\n        )\r\n      },\r\n    })\r\n  }, [navigation, goBack])\r\n\r\n  if (hasPremmission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>אפשר להשתמש במצלמה שלך?</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (hasPremmission === false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>לא ניתן להתחבר למצלמה שלך</Text>\r\n        <ButtonCmp\r\n          title={\"אפשר גישה\"}\r\n          onPress={() => {\r\n            askForCameraPermission()\r\n          }}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Modal visible={showModal} animationType=\"slide\">\r\n        <Text>מודל מודל</Text>\r\n      </Modal> */}\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.container}>\r\n          {showStartBtn && (\r\n            <ButtonCmp title=\"תתחיל לסרוק!\" onPress={startScanning} />\r\n          )}\r\n\r\n          {!hideCamera && (\r\n            <View style={styles.barcodebox}>\r\n              <BarCodeScanner\r\n                onBarCodeScanned={scanned ? undefined : handleBarcode}\r\n                style={{height: 400, width: 400}}\r\n              />\r\n            </View>\r\n          )}\r\n\r\n          {scanned && <ButtonCmp title={\"לסרוק שוב?\"} onPress={finishScan} />}\r\n        </View>\r\n      </SafeAreaView>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.bgColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  barcodebox: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 300,\r\n    width: 300,\r\n    overflow: \"hidden\",\r\n    borderRadius: 30,\r\n    backgroundColor: \"#39324a\",\r\n  },\r\n})\r\n","import {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n} from \"react-native\"\r\nimport {Button} from \"@rneui/themed\"\r\nimport {A} from \"@expo/html-elements\"\r\n\r\nexport const HomeScreen = ({navigation}) => {\r\n  function goScanner() {\r\n    navigation.navigate(\"scanner\")\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ImageBackground\r\n        source={require(\"../assets/theme.jpg\")}\r\n        resizeMode=\"cover\"\r\n        style={styles.container}\r\n        imageStyle={styles.imageBg}\r\n      >\r\n        <View style={styles.main}>\r\n          <Text style={styles.txt}>ברוכים הבאים לסורק הטבעוני!</Text>\r\n          <View\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-evenly\",\r\n              alignItems: \"center\",\r\n              borderRadius: 50,\r\n              paddingHorizontal: 30,\r\n              paddingVertical: 30,\r\n              backgroundColor: \"#221c30\",\r\n              opacity: 0.8,\r\n            }}\r\n          >\r\n            <Button\r\n              title=\"למערכת הסריקה\"\r\n              onPress={goScanner}\r\n              radius={50}\r\n              buttonStyle={{\r\n                borderColor: \"rgba(78, 116, 289, 1)\",\r\n                borderWidth: 0.5,\r\n              }}\r\n              type=\"clear\"\r\n              titleStyle={{color: \"white\", fontSize: 20}}\r\n              raised\r\n              containerStyle={{\r\n                width: 200,\r\n                marginHorizontal: 50,\r\n                marginVertical: 10,\r\n              }}\r\n            />\r\n            <A href=\"https://veganizeit.onrender.com/home\" style={styles.goWeb}>\r\n              לאתר המלא\r\n            </A>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#39324a\",\r\n    flex: 1,\r\n  },\r\n  imageBg: {\r\n    opacity: 0.4,\r\n    width: \"100%\",\r\n  },\r\n  main: {\r\n    padding: 16,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  txt: {\r\n    color: \"white\",\r\n    fontSize: 24,\r\n  },\r\n  goWeb: {\r\n    borderColor: \"rgba(78, 116, 289, 1)\",\r\n    borderWidth: 0.5,\r\n    borderRadius: 50,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    textAlign: \"center\",\r\n    width: 200,\r\n    color: \"white\",\r\n    fontSize: 20,\r\n  },\r\n})\r\n","import {Button, StyleSheet, Text} from \"react-native\"\nimport {ScannerScreen} from \"./screens/ScannerScreen\"\nimport {NavigationContainer} from \"@react-navigation/native\"\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\"\nimport {HomeScreen} from \"./screens/HomeScreen\"\nimport {useFonts} from \"@expo-google-fonts/inter\"\nimport {AmaticSC_700Bold} from \"@expo-google-fonts/amatic-sc\"\nimport {StatusBar} from \"expo-status-bar\"\n\nexport default function App() {\n  const Stack = createNativeStackNavigator()\n  let [fontsLoaded] = useFonts({\n    AmaticSC_700Bold,\n  })\n\n  if (!fontsLoaded) {\n    return null\n  }\n\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#8a2b06\",\n              headerTintColor: \"white\",\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"home\"\n            component={HomeScreen}\n            options={{\n              title: \"\",\n              headerLeft: () => {\n                return (\n                  <Text\n                    style={{\n                      fontFamily: \"AmaticSC_700Bold\",\n                      fontSize: 30,\n                      color: \"white\",\n                    }}\n                  >\n                    טבען-לי\n                  </Text>\n                )\n              },\n            }}\n          />\n          <Stack.Screen\n            name=\"scanner\"\n            component={ScannerScreen}\n            options={{title: \"\"}}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","module.exports = __webpack_public_path__ + \"static/media/theme.4e936941.jpg\";"],"sourceRoot":""}